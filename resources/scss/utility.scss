$breakpoints: (
    "": 0,
    "-sm": 576px,
    "-md": 768px,
    "-lg": 992px,
    "-xl": 1200px,
    "-xxl": 1400px,
);

.sub-collection {
    background-color: var(--bs-gray-100);
    @media (prefers-color-scheme: _dark) {
        background-color: var(--bs-gray-900);
    }
}

.soft-inset-shadow {
    box-shadow: inset 0 0 0.5em #0006;
}

@mixin min-max-width() {
    @for $i from 1 through 12 {
        @each $name, $break in $breakpoints {
            $width: #{$i} * 100% / 12;
            .max-width#{$name}-#{$i} {
                @media screen and (min-width: #{$break}) {
                    max-width: #{$width};
                }
            }
            .min-width#{$name}-#{$i} {
                @media screen and (min-width: #{$break}) {
                    min-width: #{$width};
                }
            }
        }
    }
}
@each $name, $break in $breakpoints {
    .w#{$name}-fill {
        @media screen and (min-width: #{$break}) {
            width: -webkit-fill-available !important;
        }
    }
    .w#{$name}-fit {
        @media screen and (min-width: #{$break}) {
            width: auto !important;
        }
    }
}

@mixin grid-template() {
    @for $i from 1 through 6 {
        @each $name, $break in $breakpoints {
            .t-columns#{$name}-#{$i} {
                @media screen and (min-width: #{$break}) {
                    --columns-expand: #{$i};
                    grid-template-columns: repeat(var(--columns-expand), minmax(0, 1fr));
                }
            }
        }
    }
}
@include grid-template;

.grid-expand {
    overflow-y: hidden;
    max-height: var(--max-height);
    &:not([data-grid-expanded]) {
        max-height: var(--height);
    }

    + .grid-expand-btn:not(data-no-expand):before {
        transition: transform 0.5s;
        display: block;
        text-align: center;
        font-size: 2em;
        content: "\f078";
        // background-color: #2577c9;
        font-family: "FontAwesome";
        width: 100%;
    }
    &[data-grid-expanded] + .grid-expand-btn:before {
        transform: rotateX(180deg);
    }
}

.stars-full {
    --height: 1rem;
    display: inline-block;
    background-image: url(../../public/img/site/stars-full.png);
    background-repeat: no-repeat;
    background-size: auto var(--height);

    .stars-empty {
        clip-path: inset(0 0 0 calc(var(--rating) * 20));
        height: var(--height);
        display: block;
    }
}
.stars-percent-holder {
    --percent: 0%;
    width: -webkit-fill-available;
    margin: 0.5em;
    border-radius: 100em;
    background-color: var(--bs-gray-300);
    overflow: hidden;
    .stars-percent {
        height: 100%;
        border-radius: 100em;
        width: var(--percent);
        background-color: var(--bs-primary);
    }
}
.text-dead {
    color: var(--bs-gray-600);
}

.focus-container {
    .show-in-parent-focus {
        overflow: hidden;
        height: 0;
        transition-duration: 0.3s;
    }
    &:focus-within .show-in-parent-focus {
        height: 1.5em;
    }
}

.zoom-container {
    overflow: hidden;
    .zoom-hover-1:hover {
        transition: transform 1s ease;
        transform: scale(1.1);
    }
}

.fade-out {
    animation: fade-out-anim 5s;
    display: block !important;
}

@keyframes fade-out-anim {
    0% {
        opacity: 0;
    }
    20% {
        opacity: 1;
    }
    80% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}
